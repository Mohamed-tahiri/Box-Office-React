{"version":3,"sources":["components/Navs.styled.js","components/Navs.js","components/Title.styled.js","components/Title.js","components/MainPageLayout.js","misc/config.js","components/styled.js","components/show/ShowCard.styled.js","components/show/ShowCard.js","images/not-found-image-15383864787lu.jpg","misc/custom-hooks.js","components/show/ShowGrid.js","components/actor/ActorCard.style.js","components/actor/ActorCard.js","components/actor/ActorGrid.js","pages/Home.styled.js","components/CustomRdio.js","pages/Home.js","components/show/Cast.styled.js","components/show/Cast.js","components/show/Details.styled.js","components/show/Details.js","components/show/Seasons.styled.js","components/show/Seasons.js","components/show/ShowMainData.styled.js","components/show/ShowMainData.js","pages/Show.styled.js","pages/Show.js","pages/Starred.js","App.js","reportWebVitals.js","index.js"],"names":["NavList","styled","ul","LinkStyled","Link","theme","mainColors","gray","blue","LINKS","to","text","Navs","location","useLocation","map","item","className","pathname","memo","TitleWrapper","div","dark","Title","title","subtitle","MainPageLayout","children","API_BASE_URL","apiGet","queryString","a","fetch","then","r","json","response","FlexGrid","FadeIn","SearchCard","Star","props","active","StyledShowCard","ShowCard","id","name","image","summary","onStarClick","isStrarred","summaryAsText","split","slice","join","replace","src","alt","type","onClick","showsReducer","prevState","action","showId","filter","usePersistedReducer","reducer","initialState","key","useReducer","initial","persisted","localStorage","getItem","JSON","parse","state","dispatch","useEffect","setItem","stringify","useShows","isLoading","error","show","ShowGrid","data","starredShows","dispatchStarred","includes","medium","IMAGE_NOT_FOUND","StyledActorCard","ActorCard","gender","country","birthday","deadthday","ActorGrid","person","deathday","SearchInput","input","RadioInputsWrapper","SearchButtonWrapper","CustomRdio","label","restProps","htmlFor","Home","useState","sessionStorage","setInput","newState","useLastQuery","results","setResults","searchOption","setSearchOption","isShowsSearch","onSearch","result","onInputChange","useCallback","ev","target","value","onRadioChange","placeholder","onChange","onKeyDown","keyCode","checked","length","CastList","Cast","cast","character","voice","DetailsWrapper","Details","status","premiered","network","SeasonsWrapper","SeasonList","Seasons","seasons","lenght","reduce","acc","season","episodeOrder","number","premiereDate","endDate","MainDataWrapper","HeadLine","TagList","ShowMainData","rating","tags","original","average","dangerouslySetInnerHTML","__html","tag","i","ShowPageWrapper","InfoBlock","Show","isMounted","setTimeout","catch","err","message","useShow","useParams","genres","_embedded","Starred","starred","shows","setShows","setIsLoading","setError","promises","Promise","all","apiData","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","ServiceWorker","register"],"mappings":"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","file":"static/js/main.b2aad80c.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const NavList = styled.ul`\r\n    display: flex;\r\n    justify-content: center;\r\n    list-style: none;\r\n    margin: 0 0 30px;\r\n    padding: 0;\r\n`\r\n\r\nexport const LinkStyled = styled(Link)`\r\n    margin: 0 10px;\r\n    padding: 3px 15px;\r\n    position: relative;\r\n    text-decoration: none;\r\n    color: ${({theme}) => theme.mainColors.gray };\r\n    &.active {\r\n        color: ${({theme}) => theme.mainColors.blue };\r\n        &:after {\r\n            content: '';\r\n            position: absolute;\r\n            display: block;\r\n            height: 2px;\r\n            left: 0%;\r\n            bottom: 0;\r\n            background-color: ${({theme}) => theme.mainColors.blue };\r\n            animation: slide-in 0.3s ease-in forwards;\r\n            @keyframes slide-in {\r\n                from{\r\n                    left: 50%;\r\n                    width: 0;\r\n                }\r\n                to{\r\n                    left: 0%;\r\n                    width: 100%;\r\n                }\r\n            }\r\n        }\r\n    }\r\n`","import React , { memo } from 'react';\r\nimport { useLocation } from 'react-router-dom'; \r\nimport { NavList , LinkStyled } from './Navs.styled';\r\n\r\nconst LINKS = [\r\n    {to:'/', text:'Home'},\r\n    {to:'/starred', text:'Starred'}\r\n]\r\n\r\n\r\nfunction Navs(){\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <div>\r\n            <NavList>\r\n                {LINKS.map(item =>(\r\n                    <li key={item.to}> \r\n                        <LinkStyled to={item.to} className={item.to === location.pathname ? 'active' : '' } >{item.text}</LinkStyled> \r\n                    </li>\r\n                ))}                \r\n            </NavList>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default memo(Navs); \r\n","import styled from \"styled-components\";\r\n\r\nexport const TitleWrapper = styled.div`\r\n    text-align: center;\r\n    margin: 0 0 40px;\r\n\r\n    h1 {\r\n        color: ${({theme}) => theme.mainColors.blue};\r\n        letter-spacing: 10px;\r\n        text-transform: uppercase;\r\n        margin: 0 0 10px;\r\n    }\r\n\r\n    p{\r\n        color: ${({theme}) => theme.mainColors.dark };\r\n        margin: 0;\r\n    }\r\n`","import React, { memo } from 'react';\r\nimport { TitleWrapper } from './Title.styled';\r\n\r\nfunction Title({ title , subtitle }){\r\n    return (\r\n        <TitleWrapper>\r\n            <h1> { title }   </h1>\r\n            <p>  { subtitle} </p>\r\n        </TitleWrapper>\r\n    )\r\n}\r\n\r\nexport default memo(Title); \r\n","import React from 'react'\r\nimport Navs from './Navs'\r\nimport Title from './Title'\r\n\r\nfunction MainPageLayout({ children }){\r\n    return (\r\n        <div>\r\n            <Title \r\n                title=\"Box Office\" \r\n                subtitle=\"Are you looking for a movie or an actor ?\" \r\n            />\r\n            <Navs />\r\n\r\n            { children }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPageLayout\r\n","const API_BASE_URL = 'https://api.tvmaze.com/';\r\n\r\nexport async function apiGet(queryString){\r\n    \r\n    const response = await fetch(`${API_BASE_URL}${queryString}`)\r\n        .then(r => r.json());\r\n        \r\n    return response\r\n}","import styled from \"styled-components\";\r\nimport FadeIn from 'react-fade-in';\r\n\r\nexport const FlexGrid = styled(FadeIn)`\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-wrap: wrap;\r\n`;\r\n\r\nexport const SearchCard = styled.div`\r\n    width: 300px;\r\n    height: 100%;\r\n    margin: 0 15px 40px;\r\n\r\n    .img-wrapper {\r\n        width: 100%;\r\n        border-radius: 40px;\r\n        height: 420px;\r\n        overflow: hidden;\r\n        border: 1px solid #ddd ;\r\n        \r\n        img {\r\n            object-fit: cover;\r\n            height: 100%;\r\n            width: 100%;\r\n        }   \r\n    }\r\n\r\n    h1 {\r\n        margin: 10px 0;\r\n        font-size: 21px;\r\n    }\r\n    \r\n    p {\r\n        margin: 0;\r\n    }\r\n`;\r\n\r\nexport const Star = styled.div`\r\n    display: inline-block;\r\n    width: 18px;\r\n    height: 18px;\r\n    background-color: ${ props => ( props.active ? '#ffc806' : '#ddd' ) };\r\n    -webkit-clip-path: polygon(\r\n        50% 0%,\r\n        61% 35%,\r\n        98% 35%,\r\n        68% 57%,\r\n        79% 91%,\r\n        50% 70%,\r\n        21% 91%,\r\n        32% 57%,\r\n        2% 35%,\r\n        39% 35%,\r\n    );\r\n    clip-path: polygon(\r\n        50% 0%,\r\n        61% 35%,\r\n        98% 35%,\r\n        68% 57%,\r\n        79% 91%,\r\n        50% 70%,\r\n        21% 91%,\r\n        32% 57%,\r\n        2% 35%,\r\n        39% 35%,\r\n    );\r\n`","import styled from \"styled-components\";\r\n\r\nimport { SearchCard } from '../styled';\r\n\r\nexport const StyledShowCard = styled(SearchCard)`\r\n    .btns {\r\n        margin-top: 15px;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        a {\r\n            text-decoration-color: #000;\r\n            color: #000;\r\n            &:hover{\r\n                text-decoration-color: blue;\r\n                color: blue;\r\n            }\r\n        }       \r\n        button {\r\n            outline: none;\r\n            border: 1px solid #8e8e8e;\r\n            border-radius: 15px;\r\n            padding: 5px 20px;\r\n            background-color: #fff;\r\n            display: flex ;\r\n            justify-content: center;\r\n            align-items: center;\r\n            &:hover {\r\n                cursor: pointer;\r\n            }\r\n        }\r\n    }\r\n`;","import React , { memo } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { Star } from '../styled';\r\n\r\nimport { StyledShowCard } from './ShowCard.styled';\r\n\r\n\r\nfunction ShowCard({id , name, image, summary, onStarClick , isStrarred }) {\r\n\r\n    const summaryAsText = summary\r\n        ? `${summary.split(' ').slice(0,10).join(' ').replace(/<.+?>/g, '')}...`\r\n        : 'No description'\r\n    return (\r\n        <StyledShowCard> \r\n            <div className=\"img-wrapper\">\r\n                <img src={image} alt=\"show\" />\r\n            </div>\r\n            <h1>{name}</h1>\r\n\r\n            <p>{summaryAsText}</p>\r\n            <div className=\"btns\">\r\n                <Link to={`/show/${id}`} >Read More</Link>\r\n                <button type=\"button\" onClick={onStarClick}>\r\n                    <Star active={isStrarred} />\r\n                </button>\r\n            </div>\r\n        </StyledShowCard> \r\n    );\r\n};\r\n\r\nexport default memo(ShowCard) ; \r\n","export default __webpack_public_path__ + \"static/media/not-found-image-15383864787lu.22bff5ce.jpg\";","import { useReducer , useEffect, useState } from 'react'\r\nimport { apiGet } from './config';\r\n\r\nfunction showsReducer(prevState, action){\r\n\r\n    switch(action.type){\r\n\r\n        case 'ADD': {\r\n            return[...prevState, action.showId]\r\n        }\r\n\r\n        case 'REMOVE': {\r\n            return prevState.filter((showId) => showId !== action.showId );\r\n        }\r\n\r\n        default: return prevState;\r\n    }\r\n}\r\n\r\nfunction usePersistedReducer(reducer, initialState, key){\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialState, (initial)=>{\r\n        const persisted = localStorage.getItem(key);\r\n\r\n        return persisted ? JSON.parse(persisted) : initial ;\r\n    });\r\n\r\n    useEffect(()=>{\r\n        localStorage.setItem(key, JSON.stringify(state))\r\n    }, [state, key]);\r\n    \r\n    return [state, dispatch];\r\n\r\n}\r\n\r\nexport function useShows(key = 'shows') {\r\n\r\n    return usePersistedReducer(showsReducer, [], key);\r\n}\r\n\r\n\r\nexport function useLastQuery( key = 'lastQuery' ){\r\n\r\n    const [input , setInput] = useState(()=>{\r\n        const persisted = sessionStorage.getItem(key);\r\n\r\n        return persisted ? JSON.parse(persisted) : \"\" ;       \r\n    }); \r\n\r\n    const setPersistedInput = (newState) => {\r\n        setInput(newState);\r\n        sessionStorage.setItem(key, JSON.stringify(newState));\r\n    }\r\n\r\n    return [input, setPersistedInput];\r\n};\r\n\r\nconst reducer = (prevState, action) => {\r\n    switch(action.type){\r\n\r\n        case 'FETCH_SUCCESS':{\r\n            return {isLoading: false, error:null , show: action.show }\r\n        }\r\n        case 'FECTH_FAILED':{\r\n            return {...prevState, isLoading:false , error: action.error}\r\n        }\r\n\r\n        default: return prevState\r\n    }\r\n}\r\n\r\nexport function useShow(showId) {\r\n\r\n    const [ state , dispatch ] = useReducer(\r\n        reducer, \r\n        {\r\n            show: null,\r\n            isLoading: true,\r\n            error: null\r\n        }\r\n    )\r\n\r\n\r\n    useEffect( ()=>{\r\n \r\n        let isMounted = true ;\r\n      \r\n        apiGet(`shows/${showId}?embed[]=seasons&embed[]=cast`)\r\n            .then(results => {\r\n                setTimeout(()=>{\r\n                    if(isMounted){\r\n                        dispatch({ type : 'FETCH_SUCCESS' , show: results })\r\n                    }\r\n                }, 2000)\r\n            })\r\n            .catch( err => {\r\n                if(isMounted){\r\n                    dispatch({ type : 'FECTH_FAILED' , error: err.message })\r\n                }\r\n            });\r\n\r\n        return () => {\r\n            isMounted = false\r\n        }\r\n\r\n    }, [showId]);\r\n\r\n    return state;\r\n}","import React from 'react'\r\nimport ShowCard from './ShowCard';\r\nimport { FlexGrid } from '../styled';\r\nimport IMAGE_NOT_FOUND from '../../images/not-found-image-15383864787lu.jpg'\r\nimport { useShows } from '../../misc/custom-hooks' ; \r\n\r\n\r\nfunction ShowGrid({data}) {\r\n\r\n    const [starredShows, dispatchStarred] = useShows()\r\n\r\n    return(\r\n        <FlexGrid> \r\n            {data.map(({ show }) =>{\r\n                \r\n                const isStrarred = starredShows.includes(show.id);\r\n                \r\n                const onStarClick = () => {\r\n                    if(isStrarred) {\r\n                        dispatchStarred({type: 'REMOVE', showId: show.id})\r\n                    } else {\r\n                        dispatchStarred({type: 'ADD', showId: show.id})\r\n                    }\r\n                }\r\n\r\n                return(\r\n                    <ShowCard \r\n                        key={show.id} \r\n                        id={show.id}\r\n                        name={show.name}\r\n                        image={show.image ? show.image.medium : IMAGE_NOT_FOUND}\r\n                        summary={show.summary}\r\n                        onStarClick = {onStarClick}\r\n                        isStrarred={isStrarred}\r\n                    />\r\n                );\r\n            })}\r\n        </FlexGrid> \r\n    );\r\n}\r\n\r\nexport default ShowGrid\r\n","import styled from \"styled-components\";\r\n\r\nimport { SearchCard } from '../styled';\r\n\r\nexport const StyledActorCard = styled(SearchCard)`\r\n    .deathday {\r\n        margin: 0 ;\r\n        margin-top: 15px;\r\n        font-weight: bold;\r\n    }\r\n`;","import React from 'react'\r\nimport { StyledActorCard } from './ActorCard.style';\r\n\r\nfunction ActorCard({ image, name, gender, country, birthday, deadthday }) {\r\n    return (\r\n        <StyledActorCard> \r\n            <div className=\"img-wrapper\">\r\n                <img src={image} alt=\"actor\" />\r\n            </div>\r\n            <h1>\r\n                {name} {gender ? `(${gender})` : null }\r\n            </h1>\r\n            <p>{country ? `Comes from ${country}` : 'No country Known' }</p>\r\n            {birthday ? <p>Born {birthday}</p> : null}\r\n            <p className=\"deathday\">{deadthday ? `Died ${deadthday}` : 'A live'}</p>\r\n        </StyledActorCard> \r\n);\r\n}\r\n\r\nexport default ActorCard\r\n","import React from 'react'\r\nimport ActorCard from './ActorCard';\r\nimport IMAGE_NOT_FOUND from '../../images/not-found-image-15383864787lu.jpg'\r\nimport { FlexGrid } from '../styled';\r\n\r\nfunction ActorGrid({data}) {\r\n    return(  \r\n        <FlexGrid> \r\n            {data.map(({ person }) => \r\n                    <ActorCard\r\n                        key={person.id} \r\n                        id={person.id}\r\n                        name={person.name}\r\n                        country={person.country ? person.country.name : null }\r\n                        birthday={person.birthday}\r\n                        deathday={person.deathday}\r\n                        gender = {person.gender}\r\n                        image={person.image ? person.image.medium : IMAGE_NOT_FOUND }\r\n        \r\n                    />\r\n            )}\r\n        </FlexGrid> \r\n    );\r\n    \r\n}\r\n\r\nexport default ActorGrid\r\n","import styled from \"styled-components\";\r\n\r\nexport const SearchInput = styled.input`\r\n    display: block;\r\n    font-family: 'Roboto', sans-serif;\r\n    width: 200px;\r\n    margin: auto;\r\n    outline: none;\r\n    padding: 13px 15px;\r\n    border: 1px solid #dbdbdb;\r\n    box-shadow: 0px 0px 10px 0px rgba(219, 219, 219, 0.5);\r\n    font-size: 14px;\r\n    border-radius: 12px;\r\n    color: #8d8d8d;\r\n\r\n    &::placeholder{\r\n        font-weight: 300;\r\n        color: #8d8d8d;\r\n    }\r\n`;\r\n\r\nexport const RadioInputsWrapper = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    margin: 20px 0;\r\n\r\n    div {\r\n        margin: 0 15px;\r\n    }\r\n`;\r\n\r\nexport const SearchButtonWrapper = styled.div`\r\n    text-align: center;\r\n    margin-bottom: 35px;\r\n\r\n    button {\r\n        color: #fff;\r\n        background-color: ${({  theme }) => theme.mainColors.blue };\r\n        margin: auto;\r\n        padding: 10px 50px;\r\n        font-size: 15px;\r\n        border: none;\r\n        outline: none;\r\n        border-radius: 12px;\r\n        &:hover {\r\n            cursor: pointer;\r\n        }\r\n    }\r\n`\r\n\r\n\r\n\r\n","import React , { memo } from 'react';\r\n\r\nfunction CustomRdio ({ label, ...restProps }){\r\n    return (\r\n        <label htmlFor={restProps.id}>\r\n            {label} \r\n            <input {...restProps} type=\"radio\" />\r\n        </label>   \r\n    );    \r\n}\r\n\r\nexport default memo(CustomRdio) ; \r\n","import React  , { useCallback, useState }  from 'react'\r\nimport MainPageLayout from '../components/MainPageLayout'\r\nimport { apiGet } from '../misc/config';\r\nimport ShowGrid from '../components/show/ShowGrid';\r\nimport ActorGrid from '../components/actor/ActorGrid';\r\nimport { useLastQuery } from '../misc/custom-hooks';\r\nimport { RadioInputsWrapper, SearchInput , SearchButtonWrapper } from './Home.styled';\r\nimport CustomRdio from '../components/CustomRdio';\r\n\r\nfunction Home(){\r\n    const [ input   , setInput   ] = useLastQuery();\r\n    const [ results , setResults ] = useState(null);\r\n    const [ searchOption , setSearchOption ] =  useState('shows');\r\n\r\n    const isShowsSearch = searchOption === 'shows';\r\n\r\n    const onSearch = () => {\r\n        apiGet(`search/${searchOption}?q=${input}`)\r\n            .then(result => { \r\n                setResults(result);\r\n            })\r\n    };\r\n\r\n    const onInputChange =  useCallback ((ev) => {\r\n        setInput(ev.target.value);  \r\n    }, \r\n        [setInput]\r\n    );\r\n    \r\n    const onKeyDown = (ev) => {\r\n        if(ev.keyCode === 13 ){\r\n            onSearch()\r\n        }\r\n    };\r\n\r\n    const onRadioChange =  useCallback( (ev) => {\r\n        setSearchOption(ev.target.value);\r\n    }, [] ) \r\n\r\n\r\n    const renderResults = () => {\r\n\r\n        if( results && results.length === 0) {\r\n            return( \r\n                <div>\r\n                    No results\r\n                </div>\r\n            );\r\n        }\r\n\r\n        if(results && results.length >0) {\r\n            return results[0].show ? (\r\n                <ShowGrid data={results}/> \r\n            ) : (\r\n                <ActorGrid data={results} />\r\n            )\r\n        }\r\n\r\n        return null;\r\n\r\n    } \r\n\r\n    return (\r\n        <MainPageLayout>\r\n            <SearchInput \r\n                type=\"text\" \r\n                placeholder=\"Search ...\"\r\n                onChange={onInputChange} \r\n                onKeyDown={onKeyDown} \r\n                value={input} \r\n            />\r\n\r\n            <RadioInputsWrapper>    \r\n                \r\n                <div>\r\n                    <CustomRdio \r\n                        label=\"Shows\"\r\n                        id=\"shows-search\" \r\n                        value=\"shows\"\r\n                        checked={isShowsSearch}\r\n                        onChange={onRadioChange}\r\n                    />\r\n\r\n                </div>\r\n                <div>\r\n                    <CustomRdio \r\n                            label=\"Actors\"\r\n                            id=\"actors-search\"\r\n                            value=\"people\"\r\n                            checked={!isShowsSearch}\r\n                            onChange={onRadioChange}\r\n                    />\r\n                </div>\r\n            </RadioInputsWrapper>\r\n            \r\n            <SearchButtonWrapper>\r\n                <button \r\n                    type=\"button\" \r\n                    onClick={onSearch}\r\n                >\r\n                    Search\r\n                </button>    \r\n            </SearchButtonWrapper>\r\n            \r\n            {renderResults()}\r\n        </MainPageLayout>    \r\n    )\r\n}\r\n\r\nexport default Home\r\n","import styled from \"styled-components\";\r\n\r\nexport const CastList = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n\r\n    .cast-item {\r\n        flex: 1 0 50%;\r\n        display: flex;\r\n        margin-bottom: 20px;\r\n        align-items: center;\r\n\r\n        @media only screen and (max-width: 768px) {\r\n            flex: 1 0 100% ;\r\n        }\r\n    }\r\n\r\n    .pic-wrapper{\r\n        width: 50px;\r\n        min-width: 50px;\r\n        height: 50px;\r\n        overflow: hidden;\r\n        border-radius: 50%;\r\n        img {\r\n            object-fit: cover;\r\n            width: 100%;\r\n            height: 100%;\r\n        }\r\n    }\r\n\r\n    .actor {\r\n        margin-left: 25px;\r\n        .bold {\r\n            font-weight: bold;\r\n        }\r\n    }\r\n`;\r\n\r\n","import React from 'react'\r\nimport { CastList } from './Cast.styled';\r\nimport IMAGE_NOT_FOUND from '../../images/not-found-image-15383864787lu.jpg'\r\n\r\nfunction Cast ({ cast }){\r\n    return (\r\n        <CastList>\r\n            {cast.map(({person , character, voice}, key) =>(\r\n                <div key={key} className=\"cast-item\">\r\n                    <div className=\"pic-wrapper\">\r\n                        <img \r\n                            src={person.image ? person.image.medium : IMAGE_NOT_FOUND }\r\n                            alt=\"cast-person\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"actor\" >\r\n                        <span>\r\n                            <span className=\"bold\">{person.name}</span> | {character.name} { voice ? `| Voice` : ''}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </CastList>\r\n    );\r\n}\r\n\r\nexport default Cast","import styled from \"styled-components\";\r\n\r\nexport const DetailsWrapper = styled.div`\r\n    p {\r\n        margin: 5px 0;\r\n\r\n        span {\r\n            font-weight: bold;\r\n        }\r\n    }\r\n`","import React from 'react'\r\nimport { DetailsWrapper } from './Details.styled';\r\n\r\nfunction Details({status, premiered, network}) {\r\n    return (\r\n        <DetailsWrapper>\r\n            <p>\r\n                Status: <span>{status}</span>\r\n            </p>\r\n            <p>\r\n                Premiered {premiered} {network ? `on ${network.name}` : null}\r\n            </p>\r\n        </DetailsWrapper>\r\n    );\r\n}\r\n\r\n\r\nexport default Details;","import styled from \"styled-components\";\r\n\r\nexport const SeasonsWrapper = styled.div`\r\n    p {\r\n        margin: 5px 0;\r\n    }\r\n\r\n    span {\r\n        font-weight: 700;\r\n    }\r\n`;\r\n\r\nexport const SeasonList = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    .season-item {\r\n        display: flex;\r\n        align-items: center;\r\n        margin: 10px 0;\r\n\r\n        &:last-child{\r\n            margin-bottom: 0;\r\n        }\r\n\r\n        .left {\r\n            flex: 0 0 30%;\r\n            border-right: 1px solid #b0b0b0 ;\r\n            padding-right: 20px;\r\n        }\r\n\r\n        .right {\r\n            padding-left: 20px;\r\n            flex: 1;\r\n        }\r\n    }\r\n`;","import React from 'react'\r\nimport { SeasonList, SeasonsWrapper } from './Seasons.styled';\r\n\r\nfunction Seasons ({ seasons }){\r\n    return (\r\n        <SeasonsWrapper>\r\n            <p>\r\n                Seasons in total: <span>{seasons.lenght}</span>\r\n            </p>\r\n            <p>\r\n                Episodes in total:{' '}\r\n                <span>\r\n                    {seasons.reduce((acc, season) => acc + season.episodeOrder, 0 )}\r\n                </span>\r\n            </p>\r\n            <SeasonList>\r\n                {seasons.map(season =>(\r\n                    <div key={season.id} className=\"season-item\">\r\n                        <div className=\"left\">\r\n                            <p>Season {season.number}</p>\r\n                            <p>\r\n                                Episodes: <span>{season.episodeOrder}</span>\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"right\">\r\n                            Aired:{' '}\r\n                            <span>\r\n                                {season.premiereDate} - {season.endDate}\r\n                            </span>\r\n                        </div>    \r\n                    </div>\r\n                ))}\r\n            </SeasonList>     \r\n        </SeasonsWrapper>\r\n    );\r\n}\r\n\r\nexport default Seasons\r\n","import styled from \"styled-components\";\r\n\r\nexport const MainDataWrapper = styled.div`\r\n    display: flex;\r\n    margin-bottom: 40px;\r\n\r\n    img {\r\n        min-width: 250px;\r\n        width: 300px;\r\n        max-height: 450px;\r\n        border: 1px solid #ddd;\r\n        border-radius: 40px;\r\n    }\r\n\r\n    .text-side {\r\n        margin-left: 20px;\r\n        .summary {\r\n            color: #5f5f5f;\r\n            line-height: 1.5;\r\n        }\r\n    }\r\n    \r\n    @media only screen and (max-width: 768px) {\r\n        flex-wrap: wrap;\r\n        img{\r\n            margin-bottom: 20px;\r\n            margin: auto;\r\n        }\r\n        .text-side {\r\n            margin-left: 0;\r\n            margin-top: 20px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const HeadLine = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n\r\n    h1{\r\n        margin: 0;\r\n        border-right: 1px solid #ddd;\r\n        padding-right: 25px;\r\n        margin-right: 20px;\r\n    }\r\n\r\n    div{\r\n        display: flex;\r\n        align-items: center;\r\n        span{\r\n            margin-left: 10px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const TagList = styled.div`\r\n    display: inline-flex;\r\n    flex-wrap: wrap;\r\n\r\n    span {\r\n        margin: 6px;\r\n        margin-bottom: 0;\r\n        color: blue;\r\n        background-color: #d0c9ff;\r\n        padding: 3px 13px ;\r\n        border-radius: 20px;\r\n        font-size: 14px;\r\n    }\r\n`;\r\n","import React from 'react'\r\nimport IMAGE_NOT_FOUND from '../../images/not-found-image-15383864787lu.jpg'\r\nimport { Star } from '../styled';\r\nimport { HeadLine, MainDataWrapper, TagList } from './ShowMainData.styled';\r\n\r\n\r\nfunction ShowMainData ({ name , rating, summary, tags, image }) {\r\n    return (\r\n        <MainDataWrapper>\r\n            <img src={image ? image.original : IMAGE_NOT_FOUND} alt=\"show-cover\" />\r\n            <div className=\"text-side\">\r\n                <HeadLine>\r\n                    <h1>{name}</h1>\r\n                    <div>\r\n                        <Star active />\r\n                        <span>{rating.average || 'N/A' }</span>\r\n                    </div>\r\n                </HeadLine>\r\n                <div className=\"summary\" dangerouslySetInnerHTML={{ __html: summary }} />\r\n                <div>\r\n                    Tags:{' '}\r\n                    <TagList>\r\n                        { tags.map((tag,i) => (\r\n                            <span key={i}>{tag}</span>\r\n                        ))}\r\n                    </TagList>\r\n                </div>\r\n            </div>\r\n        </MainDataWrapper>\r\n    ); \r\n}\r\n\r\nexport default ShowMainData\r\n","import styled from \"styled-components\";\r\n\r\nexport const ShowPageWrapper = styled.div`\r\n    padding: 0 20px;\r\n    \r\n    @media only screen and (min-width: 516px) {\r\n        padding: 0 40px;\r\n    }\r\n    @media only screen and (min-width: 516px) {\r\n        padding: 0 60px;\r\n    }\r\n    @media only screen and (min-width: 516px) {\r\n        padding: 0 80px;\r\n    }\r\n`;\r\n\r\nexport const InfoBlock = styled.div`\r\n    margin-bottom: 40px;\r\n    h2 {\r\n        margin: 0;\r\n        margin-bottom: 30px;\r\n        font-size: 22px;\r\n    }\r\n`","/* eslint-disable no-underscore-dangle */\r\nimport React  from 'react' ;\r\nimport { useParams } from 'react-router-dom';\r\nimport Cast from '../components/show/Cast';\r\nimport Details from '../components/show/Details';\r\nimport Seasons from '../components/show/Seasons';\r\nimport ShowMainData from '../components/show/ShowMainData';\r\nimport { useShow } from '../misc/custom-hooks';\r\nimport { InfoBlock, ShowPageWrapper } from './Show.styled';\r\n\r\n\r\nfunction Show(){\r\n\r\n    const { id } = useParams();\r\n    const { show , isLoading, error} = useShow(id);\r\n\r\n    if(isLoading) {\r\n        return <div>Data is being Loaded</div>    \r\n    }\r\n\r\n    if (error) {\r\n        return <div>Error occured: {error} </div>\r\n    }\r\n\r\n    return (\r\n        <ShowPageWrapper>\r\n            <ShowMainData \r\n                image   = {show.image}\r\n                name    = {show.name}\r\n                rating  = {show.rating}\r\n                summary = {show.summary}\r\n                tags    = {show.genres}\r\n            />\r\n\r\n            <InfoBlock>\r\n            \r\n                <h2>Details</h2>\r\n                <Details \r\n                    status    = {show.status}\r\n                    network   = {show.network}\r\n                    premiered = {show.premiered} \r\n                />\r\n            </InfoBlock>\r\n\r\n            \r\n            <InfoBlock>\r\n                <h2>Seasons</h2>\r\n                <Seasons seasons= {show._embedded.seasons} />\r\n            </InfoBlock>\r\n            \r\n\r\n            <InfoBlock>\r\n                <h2>Cast</h2>\r\n                <Cast cast={show._embedded.cast} />\r\n            </InfoBlock>\r\n        </ShowPageWrapper>\r\n    );\r\n};\r\n\r\nexport default Show\r\n ","import React , {useState , useEffect } from 'react'\r\nimport MainPageLayout from '../components/MainPageLayout'\r\nimport { useShows } from '../misc/custom-hooks'\r\nimport { apiGet } from '../misc/config'\r\nimport ShowGrid from '../components/show/ShowGrid'\r\n\r\n\r\nfunction Starred(){\r\n\r\n    const [starred ] = useShows()\r\n\r\n    const [ shows , setShows ] = useState(null);\r\n    const [ isLoading , setIsLoading ] = useState(true);\r\n    const [ error, setError ] = useState(null);\r\n\r\n    useEffect(()=>{\r\n        if(starred && starred.length > 0) {\r\n            \r\n            const promises = starred.map(showId => apiGet(`shows/${showId}`) )\r\n            \r\n            Promise.all(promises)\r\n                .then( apiData => apiData.map(show => ({ show })))\r\n                .then(results =>{\r\n                    setShows(results);\r\n                    setIsLoading(false);\r\n                })\r\n                .catch( err => {\r\n                    setError(err.message);\r\n                    setIsLoading(false);\r\n                });\r\n            \r\n        }else{\r\n            setIsLoading(false);\r\n        }\r\n\r\n    },[starred])\r\n\r\n    return (\r\n        <MainPageLayout>\r\n            { isLoading && <div>Shows are still loading</div> }\r\n            { error && <div>Error occured: {error}</div>      }\r\n            { isLoading && !shows && <div>No shows were added</div>}\r\n            { !isLoading && !error && shows && <ShowGrid data= { shows } />}\r\n        </MainPageLayout>\r\n    );    \r\n}\r\n\r\nexport default Starred\r\n","import React from 'react';\nimport { Switch , Route } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport Home from './pages/Home';\nimport Show from './pages/Show';\nimport Starred from './pages/Starred';\n\nconst theme = {\n  mainColors: {\n    blue:'#2400ff',\n    gray:'#c6c6c6',\n    dark:'#353535',\n  }\n}\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Switch>\n        <Route exact path=\"/\"> \n          <Home />\n        </Route>\n        <Route exact path=\"/starred\"> \n          <Starred />\n        </Route>\n        <Route exact path=\"/show/:id\"> \n          <Show />\n        </Route>\n        <Route> \n          <div>\n            Not Found\n          </div>\n        </Route>\n      </Switch>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>\n    ,document.getElementById('root') \n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nServiceWorker.register();\n"],"sourceRoot":""}